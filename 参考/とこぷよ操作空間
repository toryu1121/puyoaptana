################3×3の操作空間での回転の動き####################
#操作空間
require 'matrixx'
sousapuyo = Matrix.new(2, 3)
#初期位置
sousapuyo.inputstr(nil)
sousapuyo.mat[0][1] = "a"
sousapuyo.mat[1][1] = "b"
sousapuyo.tdisp

#ぷよの回転
postion = 3
case postion
  when 0
    sousapuyo.inputstr(nil)
    sousapuyo.mat[0][1] = "a"
    sousapuyo.mat[1][1] = "b"
    sousapuyo.tdisp
  when 1
    sousapuyo.inputstr(nil)
    sousapuyo.mat[1][2] = "a"
    sousapuyo.mat[1][1] = "b"
    sousapuyo.tdisp
  when 2
    sousapuyo.inputstr(nil)
    sousapuyo.mat[2][1] = "a"
    sousapuyo.mat[1][1] = "b"
    sousapuyo.tdisp
  when 3
    sousapuyo.inputstr(nil)
    sousapuyo.mat[1][0] = "a"
    sousapuyo.mat[1][1] = "b"
    sousapuyo.tdisp
end
##################操作空間beta版##########################
#操作空間
require 'matrixx'
sousapuyo = Matrix.new(5, 3)
widthcon = 3
postion = 3
#初期位置
sousapuyo.inputstr(nil)
sousapuyo.mat[0][widthcon] = "a"
sousapuyo.mat[1][widthcon] = "b"
sousapuyo.tdisp
#ぷよの回転
case postion
  when 0
    sousapuyo.inputstr(nil)
    sousapuyo.mat[0][widthcon] = "a"
    sousapuyo.mat[1][widthcon] = "b"
    sousapuyo.tdisp
  when 1
    #もし一番右以外でこの操作がされたら
    unless widthcon == 5
      sousapuyo.inputstr(nil)
      sousapuyo.mat[1][widthcon+1] = "a"
      sousapuyo.mat[1][widthcon] = "b"
      sousapuyo.tdisp
    else
      sousapuyo.inputstr(nil)
      sousapuyo.mat[1][widthcon] = "a"
      sousapuyo.mat[1][widthcon-1] = "b"
      sousapuyo.tdisp
      widthcon = 4
    end
  when 2
    sousapuyo.inputstr(nil)
    sousapuyo.mat[2][widthcon] = "a"
    sousapuyo.mat[1][widthcon] = "b"
    sousapuyo.tdisp
  when 3
    unless widthcon == 0
      sousapuyo.inputstr(nil)
      sousapuyo.mat[1][widthcon-1] = "a"
      sousapuyo.mat[1][widthcon] = "b"
      sousapuyo.tdisp
    else
      sousapuyo.inputstr(nil)
      sousapuyo.mat[1][widthcon] = "a"
      sousapuyo.mat[1][widthcon+1] = "b"
      sousapuyo.tdisp
      widthcon = 1
    end
end
################################################
#一回転する入力
p roll = [0, 1, 2, 3]
loop do
  input = gets.to_i
  if input == 3
    roll.unshift(roll.pop)
  elsif input == 4
    roll.push(roll.shift)
  else
    break
  end
  p roll
  p roll[0]
end
###############回転入力との組み合わせroll[0],widthconが位置の情報を持っている##################
#操作空間
require 'matrixx'
sousapuyo = Matrix.new(5, 3)
widthcon = 2
roll = [0, 1, 2, 3]
#初期位置
sousapuyo.inputstr(nil)
sousapuyo.mat[0][widthcon] = "a"
sousapuyo.mat[1][widthcon] = "b"
sousapuyo.tdisp

loop do
#ぷよの回転
  #一回転する入力
  input = gets.to_i
case input
  when 1
    widthcon-=1 unless widthcon == 0
  when 2
  when 3
    widthcon+=1 unless widthcon == 5
  when 4
    roll.unshift(roll.pop)
  when 5
    roll.push(roll.shift)
    else
     break
end

case roll[0]
  when 0
    sousapuyo.inputstr(nil)
    sousapuyo.mat[0][widthcon] = "a"
    sousapuyo.mat[1][widthcon] = "b"
    sousapuyo.tdisp
  when 1
    #もし一番右以外でこの操作がされたら
    unless widthcon == 5
      sousapuyo.inputstr(nil)
      sousapuyo.mat[1][widthcon+1] = "a"
      sousapuyo.mat[1][widthcon] = "b"
      sousapuyo.tdisp
    else
      sousapuyo.inputstr(nil)
      sousapuyo.mat[1][widthcon] = "a"
      sousapuyo.mat[1][widthcon-1] = "b"
      sousapuyo.tdisp
      widthcon = 4
    end
  when 2
    sousapuyo.inputstr(nil)
    sousapuyo.mat[2][widthcon] = "a"
    sousapuyo.mat[1][widthcon] = "b"
    sousapuyo.tdisp
  when 3
    unless widthcon == 0
      sousapuyo.inputstr(nil)
      sousapuyo.mat[1][widthcon-1] = "a"
      sousapuyo.mat[1][widthcon] = "b"
      sousapuyo.tdisp
    else
      sousapuyo.inputstr(nil)
      sousapuyo.mat[1][widthcon] = "a"
      sousapuyo.mat[1][widthcon+1] = "b"
      sousapuyo.tdisp
      widthcon = 1
    end
end
end

#########################################################