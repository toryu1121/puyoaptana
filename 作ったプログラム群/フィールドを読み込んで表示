require "sdl"
require "matrixx"
#定数の定義
SCREEN_W = 800
SCREEN_H = 646
MASU = SCREEN_H / 17
WAKUSTART = (800-240*0.9)/2
SOTOWIDTH = 8 * 38
WAKUHIGH  = 520*0.9
XXX = (800-SOTOWIDTH)/2+MASU
YYY = MASU*15
#ウィンドウを開く
SDL.init(SDL::INIT_EVERYTHING)
screen = SDL.set_video_mode(SCREEN_W, SCREEN_H, 16, SDL::SWSURFACE)

field = Matrix.new(12, 6)
field.tdisp

field.mat[0][0] = 1
field.mat[3][3] = 1
field.tdisp
#背景の表示
def backdisp(screen)
  # 塗りつぶし(x, y, width, high, coler)
  #下書き的なやつ
  screen.fill_rect((800-SOTOWIDTH)/2, 0 , MASU*8, SCREEN_H, [255, 204, 244])
  #外枠
  screen.fill_rect((800-SOTOWIDTH)/2, MASU*3,MASU*8,MASU*14,[255, 153, 102])
  #フィールド
  screen.fill_rect((800-SOTOWIDTH)/2+MASU, MASU*4,MASU*6,MASU*12,[255, 255, 255])
  screen.fill_rect((800-SOTOWIDTH)/2+MASU, MASU*15,MASU,MASU,[0, 0, 0])
end
#フィールドの奴の判別式
def fielddisp(field, screen)
  for i in 0...6
    for j in 0...13
      case field[i][j]
        when 0
          p "red"
          screen.fill_rect(XXX + MASU*i, YYY - MASU*j , MASU, MASU,[255, 51, 51])
        when 1
          p "green"
          screen.fill_rect(XXX + MASU*i, YYY - MASU*j , MASU, MASU,[0, 153, 152])
        when 2
          p "blue"
          screen.fill_rect(XXX + MASU*i, YYY - MASU*j , MASU, MASU,[255, 51, 51])
        when 3
          p "yerow"
          screen.fill_rect(XXX + MASU*i, YYY - MASU*j , MASU, MASU,[255, 51, 51])
      end
    end
  end
end

loop do
  #キーが「押されたかどうか」を調べる
  while event=SDL::Event2.poll
    case event
    when SDL::Event2::Quit #ウィンドウの×ボタンが押された
      exit
    when SDL::Event2::KeyDown
      exit if event.sym == SDL::Key::ESCAPE
    end
  end

backdisp(screen)
fielddisp(field.mat, screen)
screen.update_rect(0, 0, 0, 0)

end